@page "/"

<GRow>
    <GColumn>
        <h5>Input</h5>
        <EditForm Model="M">
            <DataAnnotationsValidator />

            <GRow>
                <GColumn ColumnMediumSpan="3">
                    <label>First Name</label>
                    <GTextBox @bind-Value="@M.FirstName" MaxLength="5" Placeholder="First name" Counter="true"></GTextBox>
                </GColumn>

                <GColumn ColumnMediumSpan="3">
                    <label>Middle Name</label>
                    <GTextBox @bind-Value="@M.MiddleName" Disabled="true"></GTextBox>
                </GColumn>

                <GColumn ColumnMediumSpan="3">
                    <label>Last Name</label>
                    <GTextBox @bind-Value="@M.LastName" Validatable="true"></GTextBox>
                </GColumn>

                <GColumn ColumnMediumSpan="3">
                    <GCheckbox @bind-Value="@M.Agree" Validatable="true">Agree</GCheckbox>

                    <GCheckbox @bind-Value="@M.Disabled" Disabled="true">disabled</GCheckbox>

                    <GCheckbox @bind-Value="@M.Disabled" ReadOnly="true">readonly</GCheckbox>

                    <GCheckbox Value="@M.Indeterminate" ValueExpression="@(() => M.Indeterminate)" ValueChanged="@ChangeIndeterminate" Indeterminate="@M.IsIndeterminate">indeterminate</GCheckbox>
                </GColumn>
            </GRow>

            <GRow>
                <h5>Buttons</h5>
                <GColumn>
                    <GButton OnClickCallback="@LeftClick">Blue</GButton>
                    <GButton OnRigthClickCallback="@RightClick" ButtonColor="@ButtonColors.Red">Red</GButton>
                    <GButton ButtonColor="@ButtonColors.Orange">Orange</GButton>
                    <GButton ButtonColor="@ButtonColors.Green">Green</GButton>
                    <GButton ButtonColor="@ButtonColors.White">White</GButton>
                    <GButton ButtonColor="@ButtonColors.Gray">Gray</GButton>
                    <GButton Disabled="true">Disabled</GButton>
                    <GButton CssClass="button-round-pink" RoundButton="true" ButtonColor="@ButtonColors.White">💜</GButton>
                </GColumn>
                <GColumn>
                    <GButton FullWidth="true">Full width</GButton>
                </GColumn>
            </GRow>
            <GRow>
                <GColumn>
                    <h1>Heading 1</h1>
                    <h2>Heading 2</h2>
                    <h3>Heading 3</h3>
                    <h4>Heading 4</h4>
                    <h5>Heading 5</h5>
                    <h6>Heading 6</h6>
                </GColumn>
            </GRow>
            <GRow>
                <GColumn>
                    <blockquote>
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse velit massa, pulvinar non pretium scelerisque, viverra non velit. Nulla facilisi. Nullam suscipit, dolor eu lacinia hendrerit, augue eros facilisis nulla, id interdum dolor lacus vulputate risus. Sed scelerisque est a arcu sollicitudin dapibus. In a felis non purus pretium consequat a eget diam. Curabitur elementum, leo a ornare cursus, enim odio tempor dui, eget tempor nisl ex quis risus. Aliquam nec sem quis massa luctus tempus non eget purus.</p>
                        <p class="author">Loremus Ipsumus</p>
                    </blockquote>

                    <span class="text-large">.text-large class,</span>
                    <small>small element,</small>
                    <i>i element,</i>
                    <b>b element,</b>
                    <strong>strong element,</strong>
                    <s>s element,</s>
                    <u>u element</u>
                    <p class="text-capitalize">capitalize</p>
                    <p class="text-lowercase">lowercase</p>
                    <p class="text-uppercase">uppercase</p>
                </GColumn>
            </GRow>
        </EditForm>
    </GColumn>
</GRow>

@code {
    public class DataModel
    {
        [StringLength(maximumLength: 5, MinimumLength = 3, ErrorMessage = "Incorrect lenght")]
        [Required]
        public string FirstName { get; set; }

        [StringLength(maximumLength: 10, MinimumLength = 3, ErrorMessage = "Incorrect lenght")]
        public string MiddleName { get; set; } = "John";

        [StringLength(maximumLength: 5, MinimumLength = 3, ErrorMessage = "Incorrect lenght")]
        [Required]
        public string LastName { get; set; }

        [CheckboxTicked(ErrorMessage = "You have to tick this checkbox")]
        public bool Agree { get; set; } = true;

        public bool Disabled { get; set; } = true;

        public bool Indeterminate { get; set; }
        public bool IsIndeterminate { get; set; } = true;
    }

    public DataModel M { get; set; } = new DataModel();

    private void LeftClick(MouseEventArgs e)
    {
        Console.WriteLine("click!");
    }

    private void RightClick(MouseEventArgs e)
    {
        Console.WriteLine("right click!");
    }

    private void ChangeIndeterminate(bool value)
    {
        M.IsIndeterminate = false;
        M.Indeterminate = value;
    }
}
